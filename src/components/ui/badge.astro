---
import { cva } from 'class-variance-authority';
import { cn } from '../../lib/utils';

interface Props extends astroHTML.JSX.HTMLAttributes {
  variant?: 'default' | 'secondary' | 'destructive' | 'outline';
}

const { variant = 'default', class: className, ...props } = Astro.props as Props;

const badgeVariants = cva(
  'inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2',
  {
    variants: {
      variant: {
        default: 'border-transparent bg-primary text-primary-foreground hover:bg-primary/80',
        secondary: 'border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80',
        destructive: 'border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80',
        outline: 'text-foreground',
      },
    },
    defaultVariants: {
      variant: 'default',
    },
  },
);

const classes = cn(badgeVariants({ variant }), className);
---

<div class={classes} {...props}>
  <slot />
</div>
