---
import { cva } from 'class-variance-authority';
import { cn } from '../../lib/utils';

export interface Props extends astroHTML.JSX.LinkHTMLAttributes {
  variant?: 'default' | 'muted' | 'accent';
  size?: 'default' | 'sm' | 'lg';
  isActive?: boolean;
}

const { variant = 'default', size = 'default', isActive = false, ...props } = Astro.props as Props;

const linkVariants = cva(
  'inline-flex items-center justify-center transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2',
  {
    variants: {
      variant: {
        default: 'text-foreground hover:text-accent',
        muted: 'text-muted-foreground hover:text-foreground',
        accent: 'text-accent hover:text-accent/80',
      },
      size: {
        default: 'px-2 py-1',
        sm: 'px-1.5 py-0.5 text-sm',
        lg: 'px-3 py-1.5 text-lg',
      },
      isActive: {
        true: 'font-medium',
        false: '',
      },
    },
    defaultVariants: {
      variant: 'default',
      size: 'default',
      isActive: false,
    },
  },
);

const classes = cn(linkVariants({ variant, size, isActive }));
---

<a class={classes} {...props}>
  <slot />
</a>
